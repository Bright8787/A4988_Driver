/*
 * stm32f446xx_Timer_driver.h
 *
 *  Created on: Aug 3, 2025
 *      Author: bright
 */

#ifndef DRIVER_INC_STM32F446XX_TIMER_DRIVER_H_
#define DRIVER_INC_STM32F446XX_TIMER_DRIVER_H_


#include "../../Driver/Inc/stm32f446xx.h"

#define HIGH 1
#define LOW 0

#define TIMx_CH1 1
#define TIMx_CH2 2
#define TIMx_CH3 3
#define TIMx_CH4 4


#define TIMx_MODE_FROZEN 0
#define TIMx_MODE_SETACTIVE 1
#define TIMx_MODE_SETINACTIVE 2
#define TIMx_MODE_TOGGLE 3
#define TIMx_MODE_FORCEACTIVE 4
#define TIMx_MODE_FORCEINACTIVE 5
#define TIMx_MODE_PWM1 6
#define TIMx_MODE_PWM2 7

#define TIM_CR1_DIR_POS 4

#define TIM_CCMR1_OC1M_POS 4
#define TIM_CCMR1_OC2M_POS 12
#define TIM_CCMR1_OC1PE_POS 3
#define TIM_CCMR1_OC2PE_POS 11

#define TIM_CCMR2_OC3M_POS 4
#define TIM_CCMR2_OC4M_POS 12
#define TIM_CCMR2_OC1PE_POS 3
#define TIM_CCMR2_OC2PE_POS 11

typedef struct{
	uint8_t TIM_DutyCycle; // In percent
	uint8_t TIM_Prescaler;
	uint8_t TIM_CountDirection; // Upwards or Downwards
	uint8_t TIM_Channel; // Capture Mode or Compare Mode
	uint8_t TIM_Mode;
	uint8_t TIM_Period; // in ms


}Timer_PinConfig_t;

typedef struct{
	TIM_RegDef_t *pTIMx; /*Pointer to hold the base address of the TIM peripheral*/
	Timer_PinConfig_t TIMx_PinConfig;
}Timer_Handle_t;

/*TIMx API Supported */
void TIM_Init(Timer_Handle_t *pTIMHandle);
void TIM_PeriClockControl(Timer_RegDef_t *pTIMx, uint8_t ENorDI);

#endif /* DRIVER_INC_STM32F446XX_TIMER_DRIVER_H_ */
